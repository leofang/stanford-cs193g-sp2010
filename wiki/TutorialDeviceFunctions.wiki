#summary Introducing CUDA `__device__` functions.

= `__device__` Functions =

In the last couple sections, we learned how to use the `__global__` keyword to mark a function as code that the host can call to cause the invocation of a parallel kernel on the device. Within a `__global__` function, each CUDA thread so spawned follows its own path of execution _serially_.  In CUDA, kernels consist of mostly arbitrary C code, so they can get sophisticated quickly.  Productive parallel programmers will want to [http://en.wikipedia.org/wiki/Abstraction_(computer_science) abstract] and [http://en.wikipedia.org/wiki/Information_hiding encapsulate] their kernel code into functions.