#summary Launching kernels in higher dimensions.

= Multidimensional Kernel Launch =

The [TutorialGlobalFunctions last section] hinted that `__global__` functions might be launched using grid configurations that weren't strictly one-dimensional.  In fact, if it is convenient for describing our data parallel problem to solve, CUDA allows us to create thread blocks in 1-, 2-, or 3D.  Many problems, such as the previous section's array processing tasks, are most naturally described in a flat, linear style mimicking our mental model of C's memory layout. Other tasks, particularly those often encountered in the computational sciences, are naturally embedded in two or three dimensions.  For example, [http://www.youtube.com/results?search_query=image+processing+cuda&page=&utm_source=opensearch image processing] tasks typically impose a regular 2D raster (an image) over the problem domain.  [http://www.youtube.com/results?search_query=cuda+cfd&search_type=&aq=f Computational fluid dynamics] tasks might be most naturally expressed by partitioning a volume over a 3D grid.